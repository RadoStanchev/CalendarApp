@model CalendarApp.Models.Notifications.NotificationListViewModel
@using CalendarApp.Services.Notifications.Models
@{
    ViewData["Title"] = "Notifications";
    string FilterClass(NotificationReadFilter option) => Model.Filter == option ? "btn btn-primary" : "btn btn-outline-secondary";
}

<section class="notifications-page">
    <div class="d-flex align-items-center justify-content-between mb-4">
        <div>
            <h1 class="h3 mb-1">Notifications</h1>
            <p class="text-muted mb-0">@Model.UnreadCount unread</p>
        </div>
        <div class="btn-group" role="group" aria-label="Filter notifications">
            <a asp-action="Index" asp-route-filter="@NotificationReadFilter.All" class="@FilterClass(NotificationReadFilter.All)">All</a>
            <a asp-action="Index" asp-route-filter="@NotificationReadFilter.Unread" class="@FilterClass(NotificationReadFilter.Unread)">Unread</a>
            <a asp-action="Index" asp-route-filter="@NotificationReadFilter.Read" class="@FilterClass(NotificationReadFilter.Read)">Read</a>
        </div>
    </div>

    <div class="card notification-card">
        <div class="card-body">
            <partial name="~/Views/Shared/_NotificationList.cshtml" model="Model.Notifications" />
        </div>
    </div>
</section>

@section Scripts {
    <script>
        window.calendarNotifications = window.calendarNotifications || {};
        window.calendarNotifications.filter = '@Model.Filter';
    </script>
}
